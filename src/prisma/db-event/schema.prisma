// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  //output   = "../../../node_modules/@prisma-eventdb/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  Rsvp      Rsvp[]

  @@map("users")
}

model Guest {
  id          String   @id @default(cuid())
  name        String?
  prefix      String?
  firstName   String?  @map("first_name")
  lastName    String?  @map("last_name")
  profession  String?
  institution String?
  email       String
  inviter     String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  Rsvp        Rsvp[]

  @@map("guests")
}

enum RsvpResponse {
  YES
  REPRESENTEDBY
  NO
}

model Event {
  id          String   @id @default(cuid())
  title       String
  description String?
  date        DateTime
  location    String?
  latitute    Float?
  longitude   Float?
  userId      String   @map("user_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  Rsvp        Rsvp[]

  @@map("events")
}

model Rsvp {
  id                String        @id
  user              User?         @relation(fields: [userId], references: [id])
  userId            String?       @map("user_id")
  guest             Guest         @relation(fields: [guestId], references: [id])
  guestId           String        @map("guest_id")
  representedBy     String?       @map("represented_by")
  event             Event         @relation(fields: [eventId], references: [id])
  eventId           String        @map("event_id")
  attending         Boolean?
  attendingAt       DateTime?     @map("attending_at")
  rsvpResponse      RsvpResponse? @map("rsvp_response")
  responseUpdatedBy String?       @map("response_updated_by") // jika diisi, maka dianggap diupdate oleh user backend
  responseUpdatedAt DateTime?     @map("response_updated_at") // jika diisi, maka dianggap diupdate oleh user backend
  responseNote      String?       @map("response_note") // email, phone, etc

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("rsvps")
}
